
# RFC1738 URL
broker: mqtts://localhost:1883

# list of topics to subscribe to
topics:
    - '#'

# whether to verify data
verify_data: true

# whether to validate message against schema
validate_message: true

# storage: filesystem
storage:
    type: fs
    options:
        path: /tmp/foo/bar

# storage: s3
#storage:
#    type: S3
#    options:
#        url: http://localhost:9001
#        bucket: some-bucket

# advanced functionality: add your own code/workflow/trigger
#
# hook: # trigger that implements pywis-pubsub Hook (pywis_pubsub.hook.Hook)
#
# test hook available from pywis_pubsub.hook.TestHook
#hook: pywis_pubsub.hook.TestHook



# added for mqp-subscriber
wis2box: true

toSubscribe: true
sub_host: oflkd011.dwd.de
sub_port: 8883
sub_protocol: mqtts
sub_protocol_version: MQTTv5 
sub_user: everyone
sub_password: everyone
sub_clientname: mqp-subscriber"
sub_topic: ["cache/v04/#"]
sub_logfile: /usr/src/sub/logs/dwd.log
sub_loglevel: INFO
sub_maxMSGsize: 2048
sub_share_name: wis2box_mygroupname
sub_share_quantity: 5
show_message: False
msg_store: /usr/src/sub/msg_store/

withDownload: true
useAria2: false
# download_targetDir: /data/pywis-pubsub/data/aria2-downloads/
# download_toDoDir: /usr/src/sub/toDownload/
# download_whitelist: /data/pywis-pubsub/config/mqp-subscriber/whitelist.txt
download_targetDir: targetDownload/
download_toDoDir: toDownload/
download_whitelist: whitelist.txt
filedownloadURL: true
download_proxy: ""
download_logfile: /usr/src/sub/logs/dwd_download.log
download_loglevel: INFO
download_onlyCore: true
download_restricted: false
#download_username: 
#download_password: 
download_format: []

monitor_metrics": false
